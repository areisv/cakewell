<?php
/**
 *  Cakewell CakePHP Core Config File
 *
 *  TL;DR Notes:
 *      Configures on a per-domain basis
 *      Editable sections are marked ** EDITABLE **
 *
 *  A modified core config file that attempts to automatically accomodate
 *  multiple domains by modifying the confiugation settings to the server (based
 *  on the $_SERVER['SERVER_NAME'] value).
 *
 *  This approach is adapted from the model described here:
 *  http://bakery.cakephp.org/articles/view/one-core-one-app-multiple-domains
 *
 *  To see the original version of this file with comments, visit:
 *  https://trac.cakephp.org/browser/branches/1.2.x.x/app/config/core.php
 *
 *  For more information on CakePhp core configuration, visit:
 *  http://book.cakephp.org/view/42/The-Configuration-Class
 *
 * CakePHP Debug Level:
 *
 * Production Mode:
 * 	0: No error messages, errors, or warnings shown. Flash messages redirect.
 *
 * Development Mode:
 * 	1: Errors and warnings shown, model caches refreshed, flash messages halted.
 * 	2: As in 1, but also with full debug messages and SQL output.
 * 	3: As in 2, but also with full controller dump.
 *
 * In production mode, flash messages redirect after a time interval.
 * In development mode, you need to click the flash message to continue.
 */

/** EDITABLE **
     * Domain Map
     * This is a cakewell innovation that maps different domains (via
     * $_SERVER['SERVER_NAME']) to different App.Mode configuration values,
     * which represent different configuration settings (at bottom).
     *
     * The App.Mode value also then becomes the key for the DB config file.
     */
    $ConfigDomainMap = array
    (
        #$_SERVER['SERVER_NAME']    => App.Mode value
        'localhost'                 => 'test',
        'cakewell'                  => 'test',
        'example.com'               => 'production'
    );

/* NON-EDITABLE
        $_SERVER['SERVER_NAME'] not set in some context (e.g. cron jobs)
        In this case, we look for to see if command line parameter gives
        us the value, following the example here:
        http://bakery.cakephp.org/articles/view/one-core-one-app-multiple-domains
    */
    if ( empty($_SERVER['SERVER_NAME']) )
    {
        // look at last cli value
        if ( count($_SERVER['argv']) )
            $_SERVER['SERVER_NAME'] = $_SERVER['argv'][count($_SERVER['argv'])-1];
    }

    // Set App.Mode Value
    // defaults
    Configure::write('App.mode', 'production');     // default value
    Configure::write('App.server_name', '');

    // from map above
    foreach ( $ConfigDomainMap as $server_name => $app_mode )
    {
        if ( $server_name == $_SERVER['SERVER_NAME'] )
        {
            Configure::write('App.mode', $app_mode);
            Configure::write('App.server_name', $server_name);
        }
    }



    /**
     * Default Config Settings
     * These are the basic CakePhp core settings (with comments scrubbed.)
     * These can be overridden on a App.Mode-specific basis below.  By default,
     * these are more conservative (i.e. secure).
     */
    Configure::write('debug', 0);
    Configure::write('App.encoding', 'UTF-8');
    Configure::write('Cache.disable', true);
    define('LOG_ERROR', 2);
    Configure::write('Session.cookie', 'CAKEPHP');
    Configure::write('Session.timeout', '120');
    Configure::write('Acl.classname', 'DbAcl');
    Configure::write('Acl.database', 'default');
    Cache::config('default', array('engine' => 'File'));

    // Session Options* (*make sure you refer to documentation before editing this)
    Configure::write('Session.save', 'php');
    Configure::write('Session.start', true);
    Configure::write('Session.checkAgent', true);
    Configure::write('Security.level', 'high');
    Configure::write('Security.salt', 'cakewell-DYhG93b0qyJfIxfs2guVoUubWwvniR2G0FgaC9mi');
    //Configure::write('Session.table', 'cake_sessions');
    //Configure::write('Session.database', 'default');

    // Admin Routest*
    //Configure::write('Routing.admin', 'admin');

    // Pretty Urls without mod_rewrite*
    //Configure::write('App.baseUrl', env('SCRIPT_NAME'));

    // Compress css/js*
    //Configure::write('Asset.filter.css', 'css.php');
    //Configure::write('Asset.filter.js', 'custom_javascript_output_filter.php');

    /**
     * App.Mode Config Overrides
     * These are based on the settings mapped to server name above
     */


/** EDITABLE **
     * App.Mode-specific Settings
     * These settings will override the default settings above
     */
    if ( Configure::read('App.mode') == 'test' )
    {
        Configure::write('debug', 2);
    }
    elseif ( Configure::read('App.mode') == 'production' )
    {
        Configure::write('debug', 0);
        Configure::write('Cache.disable', false);
    }
    else
    {
        // this should not happen, so raise error
        trigger_error('App.mode not properly set', E_USER_ERROR);
        die('fatal error during core configuration');
    }

    /**
     * Domain-Specific Config Files
     * If a file with name match App.Mode settings found in config/domains
     * folder, load it.  An example file:
     *
     * config/domains/test.php
     */
    $app_domain_config_file = sprintf( '%s/%s/%s.php',
                                       CONFIGS,
                                       'domains',
                                       Configure::read('App.mode') );
    if ( file_exists($app_domain_config_file) )
        require_once($app_domain_config_file);



/** EDITABLE **
     * App Globals
     * Add any constants or config settings that are not domain specific here.
     * These can be set on a domain-specific basis above.  They can also be
     * see in domain config files.
     */

    // Project Root Directory Path
    Configure::write('App.project_root', dirname(dirname(dirname(__FILE__))) . DS);
    define('PROJECT_ROOT', Configure::read('App.project_root'));

    // ReCaptcha Keys (http://recaptcha.net/)
    define('RECAPTCHA_DOMAIN', 'YOUR_KEY_DOMAIN');
    define('RECAPTCHA_PUBLIC_KEY', 'PUBLIC_KEY_HERE');
    define('RECAPTCHA_PRIVATE_KEY', 'PRIVATE_KEY_HERE');

    // Twitter Login
    define('TWITTER_USER', 'YOUR_TWITTER_USERNAME');
    define('TWITTER_PASS', 'YOUR_TWITTER_PASSWORD');
?>
